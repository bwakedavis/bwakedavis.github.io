{"componentChunkName":"component---src-templates-blog-post-js","path":"/shell_scripting/","result":{"data":{"site":{"siteMetadata":{"title":"bwake blog"}},"markdownRemark":{"id":"b06cfd96-2ab1-5e59-b8a4-82cf49f30cd2","excerpt":"See shells available. check where bash is installed. create a shell script. change permissions Comments Are not executed.\nExplains code. Variables Variable…","html":"<p>See shells available.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> /etc/shells</code></pre></div>\n<p>check where bash is installed.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">which</span> <span class=\"token function\">bash</span></code></pre></div>\n<p>create a shell script.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">touch</span> hello.sh</code></pre></div>\n<p>change permissions</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">chmod</span> +x hello.sh</code></pre></div>\n<h3>Comments</h3>\n<p>Are not executed.\nExplains code.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># This is a comment</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Hello, world!\"</span> <span class=\"token comment\"># This prints hello world</span></code></pre></div>\n<h3>Variables</h3>\n<p>Variable store data</p>\n<h5>Types of variables</h5>\n<ul>\n<li>System variables</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token environment constant\">$BASH</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token environment constant\">$BASH_VERSION</span>\n<span class=\"token builtin class-name\">echo</span> My home <span class=\"token function\">dir</span> is <span class=\"token environment constant\">$HOME</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token environment constant\">$PWD</span></code></pre></div>\n<ul>\n<li>User defined variables</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span>Davis\n<span class=\"token assign-left variable\">value</span><span class=\"token operator\">=</span><span class=\"token number\">10</span>\n<span class=\"token assign-left variable\">greetings</span><span class=\"token operator\">=</span><span class=\"token string\">\"Good morning\"</span>\n<span class=\"token builtin class-name\">echo</span> My name is <span class=\"token variable\">$name</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$value</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$greetings</span></code></pre></div>\n<h3>Read user input</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#! /usr/bin/bash</span>\n\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Enter your name: \"</span>\n<span class=\"token builtin class-name\">read</span> name\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Your name is: <span class=\"token variable\">$name</span>\"</span>\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Please enter your first and last name: \"</span>\n<span class=\"token builtin class-name\">read</span> f_name l_name\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Your first and last name is: <span class=\"token variable\">$f_name</span> <span class=\"token variable\">$l_name</span>\"</span> \n\n<span class=\"token comment\"># Enter input on the same line as prompt</span>\n<span class=\"token builtin class-name\">read</span> -p <span class=\"token string\">\"Enter your Country: \"</span> country\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Your country is: <span class=\"token variable\">$country</span>\"</span>\n\n<span class=\"token comment\"># Silent input eg. for password</span>\n<span class=\"token builtin class-name\">read</span> -sp <span class=\"token string\">'Enter your password: '</span> user_password\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Confirm your password: <span class=\"token variable\">$user_password</span>\"</span> <span class=\"token comment\"># not recommended to  show password</span>\n\n<span class=\"token comment\"># Store input in an array</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Enter names: \"</span>\n<span class=\"token builtin class-name\">read</span> -a names\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Names <span class=\"token variable\">${names<span class=\"token punctuation\">[</span>0<span class=\"token punctuation\">]</span>}</span> <span class=\"token variable\">${names<span class=\"token punctuation\">[</span>1<span class=\"token punctuation\">]</span>}</span> <span class=\"token variable\">${names<span class=\"token punctuation\">[</span>2<span class=\"token punctuation\">]</span>}</span> <span class=\"token variable\">${names<span class=\"token punctuation\">[</span>3<span class=\"token punctuation\">]</span>}</span>\"</span>\n\n<span class=\"token comment\"># If you don't store the input it is stored by default in an variable called $REPLY</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Enter name: \"</span>\n<span class=\"token builtin class-name\">read</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"\"</span></code></pre></div>\n<h3>Passing arguments</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$1</span> <span class=\"token variable\">$2</span> <span class=\"token variable\">$3</span> <span class=\"token string\">'> echo <span class=\"token variable\">$1</span> <span class=\"token variable\">$2</span> <span class=\"token variable\">$3</span>'</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$0</span> <span class=\"token variable\">$1</span> <span class=\"token variable\">$2</span> <span class=\"token variable\">$3</span> <span class=\"token string\">'> echo <span class=\"token variable\">$1</span> <span class=\"token variable\">$2</span> <span class=\"token variable\">$3</span>'</span> <span class=\"token comment\"># appends the script  name on the output</span></code></pre></div>\n<p>run </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">./hello.sh John Jane James\n\n<span class=\"token comment\"># output</span>\n<span class=\"token comment\">#John Jane James > echo $1 $2 $3</span>\n<span class=\"token comment\">#./hello.sh John Jane James > echo $1 $2 $3</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># pass arguments as an array</span>\n<span class=\"token assign-left variable\">args</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"<span class=\"token variable\">$@</span>\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># store arguments as array</span>\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">${args<span class=\"token punctuation\">[</span>0<span class=\"token punctuation\">]</span>}</span> <span class=\"token variable\">${args<span class=\"token punctuation\">[</span>1<span class=\"token punctuation\">]</span>}</span> <span class=\"token variable\">${args<span class=\"token punctuation\">[</span>2<span class=\"token punctuation\">]</span>}</span> <span class=\"token variable\">${args<span class=\"token punctuation\">[</span>3<span class=\"token punctuation\">]</span>}</span>\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$@</span> <span class=\"token comment\"># print the whole array</span>\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$#</span> <span class=\"token comment\"># print number of arguments</span></code></pre></div>\n<h3>If statements</h3>\n<p>If then else</p>\n<h5>Integer comparison</h5>\n<ul>\n<li>-eq (is equal to) - if [“$a” -eq “$b”]</li>\n<li>-ne (is not equal to) - if [“$a” -ne “$b”]</li>\n<li>-gt (is greater than) - if [“$a” -gt “$b”]</li>\n<li>-ge (is greater than or equal to) - if [“$a” -ge “$b”]</li>\n<li>lt (is less than) - if [“$a” -lt “$b”]</li>\n<li>-le (is less than or equal to) - if [“$a” -le “$b”]</li>\n<li>&#x3C; (is less than) - if [“$a” &#x3C; “$b”]</li>\n<li>&#x3C;= (is less than or equal to) - if [“$a” &#x3C;= “$b”]</li>\n<li>\n<blockquote>\n<p>(is greater than) - if [“$a” > “$b”]</p>\n</blockquote>\n</li>\n<li>\n<blockquote>\n<p>= (is greater than or equal to) - if [“$a” >= “$b”]</p>\n</blockquote>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">count</span><span class=\"token operator\">=</span><span class=\"token number\">10</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$count</span> -eq <span class=\"token number\">10</span> <span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"condition is true\"</span>\n<span class=\"token keyword\">fi</span></code></pre></div>\n<h5>String comparison</h5>\n<ul>\n<li>= (is equal to) - if [“$a” = “$b”]</li>\n<li>== (is equal to) - if [“$a” == “$b”]</li>\n<li>!= (is not equal to) - if [“$a” != “$b”]</li>\n<li>&#x3C; (is less than, in ASCII alphabetic order) - if [“$a” &#x3C; “$b”]</li>\n<li>\n<blockquote>\n<p>(is greater than, in ASCII alphabetic order) - if [“$a” > “$b”]</p>\n</blockquote>\n</li>\n<li>-z (string is null, that is, has zero length)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#! /usr/bin/bash</span>\n\n<span class=\"token assign-left variable\">count</span><span class=\"token operator\">=</span><span class=\"token number\">10</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$count</span> -eq <span class=\"token number\">11</span> <span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"condition is true\"</span>\n<span class=\"token keyword\">else</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"condition is false\"</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token variable\"><span class=\"token punctuation\">((</span>$count <span class=\"token operator\">>=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">))</span></span>\n<span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"condition is true\"</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token variable\"><span class=\"token punctuation\">((</span>\"zion\" <span class=\"token operator\">&lt;</span> \"abc\"<span class=\"token punctuation\">))</span></span>\n<span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"yes\"</span>\n<span class=\"token keyword\">else</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"no\"</span>\n<span class=\"token keyword\">fi</span></code></pre></div>\n<h3>File test operators</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> -e <span class=\"token string\">\"Enter name of the file : <span class=\"token entity\" title=\"\\c\">\\c</span>\"</span>\n<span class=\"token builtin class-name\">read</span> file_name\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> -e <span class=\"token variable\">$file_name</span> <span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$file_name</span> found\"</span>\n<span class=\"token keyword\">else</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$file_name</span> not found\"</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token builtin class-name\">echo</span> -e <span class=\"token string\">\"Enter name of the file : <span class=\"token entity\" title=\"\\c\">\\c</span>\"</span>\n<span class=\"token builtin class-name\">read</span> file_name\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> -s <span class=\"token variable\">$file_name</span> <span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$file_name</span> not empty\"</span>\n<span class=\"token keyword\">else</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$file_name</span> empty\"</span>\n<span class=\"token keyword\">fi</span></code></pre></div>\n<h3>Append to file</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> -e <span class=\"token string\">\"Enter name of the file : <span class=\"token entity\" title=\"\\c\">\\c</span>\"</span>\n<span class=\"token builtin class-name\">read</span> file_name\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> -f <span class=\"token variable\">$file_name</span> <span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">then</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> -w <span class=\"token variable\">$file_name</span> <span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">then</span>\n        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Type some text. To quit, press Ctrl+D.\"</span>\n        <span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token variable\">$file_name</span>\n    <span class=\"token keyword\">else</span>\n        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"You do not have the right permissions\"</span>\n    <span class=\"token keyword\">fi</span>\n<span class=\"token keyword\">else</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$file_name</span> does not exist\"</span>\n<span class=\"token keyword\">fi</span></code></pre></div>\n<h3>Logical ‘AND’ Operator</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#! /usr/bin/bash</span>\n\n<span class=\"token assign-left variable\">age</span><span class=\"token operator\">=</span><span class=\"token number\">20</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\">$age</span>\"</span> -gt <span class=\"token number\">18</span> <span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\">$age</span>\"</span> -lt <span class=\"token number\">30</span> <span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Valid candidate\"</span>\n<span class=\"token keyword\">else</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Candidate not valid\"</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token comment\">#OR</span>\n<span class=\"token assign-left variable\">age</span><span class=\"token operator\">=</span><span class=\"token number\">3</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\">$age</span>\"</span> -gt <span class=\"token number\">18</span> -a <span class=\"token string\">\"<span class=\"token variable\">$age</span>\"</span> -lt <span class=\"token number\">30</span> <span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Valid candidate\"</span>\n<span class=\"token keyword\">else</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Candidate not valid\"</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token comment\">#OR</span>\n<span class=\"token assign-left variable\">age</span><span class=\"token operator\">=</span><span class=\"token number\">23</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\">$age</span>\"</span> -gt <span class=\"token number\">18</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">\"<span class=\"token variable\">$age</span>\"</span> -lt <span class=\"token number\">30</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Valid candidate\"</span>\n<span class=\"token keyword\">else</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Candidate not valid\"</span>\n<span class=\"token keyword\">fi</span></code></pre></div>\n<h3>Logical ‘OR’ operator</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#! /usr/bin/bash</span>\n\n<span class=\"token assign-left variable\">age</span><span class=\"token operator\">=</span><span class=\"token number\">40</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\">$age</span>\"</span> -lt <span class=\"token number\">18</span> <span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\">$age</span>\"</span> -lt <span class=\"token number\">30</span> <span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Valid candidate\"</span>\n<span class=\"token keyword\">else</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Candidate not valid\"</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token comment\">#OR</span>\n<span class=\"token assign-left variable\">age</span><span class=\"token operator\">=</span><span class=\"token number\">3</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\">$age</span>\"</span> -gt <span class=\"token number\">18</span> -o <span class=\"token string\">\"<span class=\"token variable\">$age</span>\"</span> -lt <span class=\"token number\">30</span> <span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Valid candidate\"</span>\n<span class=\"token keyword\">else</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Candidate not valid\"</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token comment\">#OR</span>\n<span class=\"token assign-left variable\">age</span><span class=\"token operator\">=</span><span class=\"token number\">230</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\">$age</span>\"</span> -lt <span class=\"token number\">18</span> <span class=\"token operator\">||</span> <span class=\"token string\">\"<span class=\"token variable\">$age</span>\"</span> -lt <span class=\"token number\">30</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Valid candidate\"</span>\n<span class=\"token keyword\">else</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Candidate not valid\"</span>\n<span class=\"token keyword\">fi</span></code></pre></div>\n<h3>Arithmetic  operations</h3>\n<p>Whole numbers</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">num1</span><span class=\"token operator\">=</span><span class=\"token number\">20</span>\n<span class=\"token assign-left variable\">num2</span><span class=\"token operator\">=</span><span class=\"token number\">5</span>\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token variable\"><span class=\"token variable\">$((</span> num1 <span class=\"token operator\">+</span> num2 <span class=\"token variable\">))</span></span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token variable\"><span class=\"token variable\">$((</span> num1 <span class=\"token operator\">-</span> num2 <span class=\"token variable\">))</span></span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token variable\"><span class=\"token variable\">$((</span> num1 <span class=\"token operator\">*</span> num2 <span class=\"token variable\">))</span></span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token variable\"><span class=\"token variable\">$((</span> num1 <span class=\"token operator\">/</span> num2 <span class=\"token variable\">))</span></span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token variable\"><span class=\"token variable\">$((</span> num1 <span class=\"token operator\">%</span> num2 <span class=\"token variable\">))</span></span>\n\n<span class=\"token comment\">#OR</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">expr</span> $num1 + $num2 <span class=\"token variable\">)</span></span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">expr</span> $num1 - $num2 <span class=\"token variable\">)</span></span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">expr</span> $num1 <span class=\"token punctuation\">\\</span>* $num2 <span class=\"token variable\">)</span></span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">expr</span> $num1 / $num2 <span class=\"token variable\">)</span></span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">expr</span> $num1 % $num2 <span class=\"token variable\">)</span></span></code></pre></div>\n<p>Floating point numbers math operations\nGet around using <code class=\"language-text\">bc</code> tool</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"20.5+5\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">bc</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"20.5-5\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">bc</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"20.5*5\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">bc</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"scale2;20.5/5\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">bc</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"20.5%5\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">bc</span>\n\n<span class=\"token assign-left variable\">num</span><span class=\"token operator\">=</span><span class=\"token number\">27</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"scale=2;sqrt(<span class=\"token variable\">$num</span>)\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">bc</span> -l\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"scale=2;3^3\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">bc</span> -l</code></pre></div>\n<h3>Case Statement</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">vehicle</span><span class=\"token operator\">=</span><span class=\"token variable\">$1</span>\n\n<span class=\"token keyword\">case</span> <span class=\"token string\">\"<span class=\"token variable\">$vehicle</span>\"</span> <span class=\"token keyword\">in</span>\n    <span class=\"token string\">\"car\"</span> <span class=\"token punctuation\">)</span>\n        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Rent of <span class=\"token variable\">$vehicle</span> is 100 dollars\"</span> <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token string\">\"van\"</span> <span class=\"token punctuation\">)</span>\n        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Rent of <span class=\"token variable\">$vehicle</span> is 120 dollars\"</span> <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token string\">\"truck\"</span> <span class=\"token punctuation\">)</span>\n        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Rent of <span class=\"token variable\">$vehicle</span> is 150 dollars\"</span> <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token string\">\"bicycle\"</span> <span class=\"token punctuation\">)</span>\n        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Rent of <span class=\"token variable\">$vehicle</span> is 10 dollars\"</span> <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n    * <span class=\"token punctuation\">)</span>\n        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$vehicle</span> is an unknown vehicle, try car, van, truck or bicycle\"</span> <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">esac</span>   </code></pre></div>\n<p>run</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">./hello.sh tuktuk</code></pre></div>\n<p>Regular Expression</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> -e <span class=\"token string\">\"Enter some character: <span class=\"token entity\" title=\"\\c\">\\c</span>\"</span>\n<span class=\"token builtin class-name\">read</span> value\n\n\n<span class=\"token keyword\">case</span> <span class=\"token string\">\"<span class=\"token variable\">$value</span>\"</span> <span class=\"token keyword\">in</span>\n    <span class=\"token punctuation\">[</span>a-z<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span>\n        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"You entered <span class=\"token variable\">$value</span> which is between a-z\"</span> <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">[</span>A-Z<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span>\n        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"You entered <span class=\"token variable\">$value</span> which is between A-Z\"</span> <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">0</span>-9<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span>\n        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"You entered <span class=\"token variable\">$value</span> which is between 0-9\"</span> <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n    ? <span class=\"token punctuation\">)</span>\n        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"You entered <span class=\"token variable\">$value</span> which is a special character\"</span> <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n    * <span class=\"token punctuation\">)</span>\n        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$value</span> is an unknown value, possibly more than one character\"</span> <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">esac</span>   </code></pre></div>\n<h3>Arrays Variables</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">os</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Parrot Os\"</span> <span class=\"token string\">\"Kali Linux\"</span> <span class=\"token string\">\"Windows\"</span> <span class=\"token string\">\"Mac OS X\"</span> <span class=\"token string\">\"Ubuntu\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">${os<span class=\"token punctuation\">[</span>@<span class=\"token punctuation\">]</span>}</span>\"</span> <span class=\"token comment\"># prints items in yhe array</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">${<span class=\"token operator\">!</span>os<span class=\"token punctuation\">[</span>@<span class=\"token punctuation\">]</span>}</span>\"</span> <span class=\"token comment\"># prints index</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">${<span class=\"token operator\">#</span>os<span class=\"token punctuation\">[</span>@<span class=\"token punctuation\">]</span>}</span>\"</span> <span class=\"token comment\"># prints length</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">${os<span class=\"token punctuation\">[</span>3<span class=\"token punctuation\">]</span>}</span>\"</span> <span class=\"token comment\"># prints 4th element</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">${os<span class=\"token punctuation\">[</span>0<span class=\"token punctuation\">]</span>}</span>\"</span>\nos<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token string\">\"Xubuntu\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">${os<span class=\"token punctuation\">[</span>@<span class=\"token punctuation\">]</span>}</span>\"</span>\n<span class=\"token builtin class-name\">unset</span> os<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">${os<span class=\"token punctuation\">[</span>@<span class=\"token punctuation\">]</span>}</span>\"</span>\n\n<span class=\"token assign-left variable\">strings</span><span class=\"token operator\">=</span><span class=\"token string\">\"An array of string\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">${strings<span class=\"token punctuation\">[</span>@<span class=\"token punctuation\">]</span>}</span>\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">${strings<span class=\"token punctuation\">[</span>0<span class=\"token punctuation\">]</span>}</span>\"</span> <span class=\"token comment\"># the whole string is assigned to the index 0</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">${<span class=\"token operator\">#</span>strings<span class=\"token punctuation\">[</span>1<span class=\"token punctuation\">]</span>}</span>\"</span> <span class=\"token comment\">#0</span></code></pre></div>\n<h3>While loops</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">n</span><span class=\"token operator\">=</span><span class=\"token number\">1</span>\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$n</span> -le <span class=\"token number\">10</span> <span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">do</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$n</span>\"</span>\n    <span class=\"token assign-left variable\">n</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$((</span> n<span class=\"token operator\">+</span><span class=\"token number\">1</span> <span class=\"token variable\">))</span></span>\n<span class=\"token keyword\">done</span>\n\n\n<span class=\"token comment\">#OR</span>\n<span class=\"token assign-left variable\">n</span><span class=\"token operator\">=</span><span class=\"token number\">1</span>\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$n</span> -le <span class=\"token number\">10</span> <span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">do</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$n</span>\"</span>\n   <span class=\"token variable\"><span class=\"token punctuation\">((</span> n<span class=\"token operator\">++</span> <span class=\"token punctuation\">))</span></span>\n<span class=\"token keyword\">done</span>\n\n<span class=\"token comment\">#OR</span>\n<span class=\"token assign-left variable\">n</span><span class=\"token operator\">=</span><span class=\"token number\">1</span>\n<span class=\"token keyword\">while</span> <span class=\"token variable\"><span class=\"token punctuation\">((</span> $n <span class=\"token operator\">&lt;=</span> <span class=\"token number\">10</span> <span class=\"token punctuation\">))</span></span>\n<span class=\"token keyword\">do</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$n</span>\"</span>\n   <span class=\"token variable\"><span class=\"token punctuation\">((</span> <span class=\"token operator\">++</span>n <span class=\"token punctuation\">))</span></span>\n<span class=\"token keyword\">done</span>\n\n<span class=\"token assign-left variable\">n</span><span class=\"token operator\">=</span><span class=\"token number\">1</span>\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$n</span> -le <span class=\"token number\">10</span> <span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">do</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$n</span>\"</span>\n   <span class=\"token variable\"><span class=\"token punctuation\">((</span> n<span class=\"token operator\">++</span> <span class=\"token punctuation\">))</span></span>\n   <span class=\"token function\">sleep</span> <span class=\"token number\">1</span> <span class=\"token comment\"># delays each iteration by 1 second</span>\n<span class=\"token keyword\">done</span>\n\n\n<span class=\"token assign-left variable\">n</span><span class=\"token operator\">=</span><span class=\"token number\">1</span>\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$n</span> -le <span class=\"token number\">3</span> <span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">do</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$n</span>\"</span>\n   <span class=\"token variable\"><span class=\"token punctuation\">((</span> n<span class=\"token operator\">++</span> <span class=\"token punctuation\">))</span></span>\n   mate-terminal <span class=\"token operator\">&amp;</span> <span class=\"token comment\"># opens 3 terminal windows</span>\n<span class=\"token keyword\">done</span>\n\n<span class=\"token comment\"># Read file content</span>\n<span class=\"token keyword\">while</span> <span class=\"token builtin class-name\">read</span> p\n<span class=\"token keyword\">do</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$p</span>\n<span class=\"token keyword\">done</span> <span class=\"token operator\">&lt;</span> file.txt\n\n<span class=\"token comment\">#OR</span>\n<span class=\"token comment\"># Read file content</span>\n<span class=\"token function\">cat</span> file.txt <span class=\"token operator\">|</span> <span class=\"token keyword\">while</span> <span class=\"token builtin class-name\">read</span> p\n<span class=\"token keyword\">do</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$p</span>\n<span class=\"token keyword\">done</span>\n\n<span class=\"token comment\">#OR</span>\n<span class=\"token comment\"># Read file content</span>\n<span class=\"token keyword\">while</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">IFS</span></span><span class=\"token operator\">=</span><span class=\"token string\">' '</span> <span class=\"token builtin class-name\">read</span> -r line\n<span class=\"token keyword\">do</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$line</span>\n<span class=\"token keyword\">done</span> <span class=\"token operator\">&lt;</span> file.txt</code></pre></div>\n<h3>Until loop</h3>\n<p>Execute if condition is false</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">n</span><span class=\"token operator\">=</span><span class=\"token number\">1</span>\n<span class=\"token keyword\">until</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$n</span> -ge <span class=\"token number\">10</span> <span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">do</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$n</span>\n    <span class=\"token assign-left variable\">n</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$((</span> n<span class=\"token operator\">+</span><span class=\"token number\">1</span> <span class=\"token variable\">))</span></span>\n<span class=\"token keyword\">done</span></code></pre></div>\n<h3>For loop</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> <span class=\"token number\">1</span> <span class=\"token number\">2</span> <span class=\"token number\">3</span> <span class=\"token number\">4</span> <span class=\"token number\">5</span>\n<span class=\"token keyword\">do</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$i</span>\"</span>\n<span class=\"token keyword\">done</span>\n\n<span class=\"token comment\">#OR</span>\n<span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">..</span><span class=\"token number\">10</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">do</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$i</span>\"</span>\n<span class=\"token keyword\">done</span>\n\n<span class=\"token comment\"># specify loop range</span>\n<span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">..</span><span class=\"token number\">10</span><span class=\"token punctuation\">..</span><span class=\"token number\">2</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">do</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$i</span>\"</span>\n<span class=\"token keyword\">done</span>\n\n<span class=\"token comment\">#OR</span>\n<span class=\"token keyword\">for</span> <span class=\"token variable\"><span class=\"token punctuation\">((</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">))</span></span>\n<span class=\"token keyword\">do</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$i</span>\"</span>\n<span class=\"token keyword\">done</span>\n\n<span class=\"token comment\"># execute commands</span>\n<span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">command</span> <span class=\"token keyword\">in</span> <span class=\"token function\">ls</span> <span class=\"token builtin class-name\">pwd</span> <span class=\"token function\">date</span>\n<span class=\"token keyword\">do</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$command</span>\"</span>\n    <span class=\"token variable\">$command</span>\n<span class=\"token keyword\">done</span></code></pre></div>\n<h3>Select loop</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token keyword\">select</span> <span class=\"token for-or-select variable\">name</span> <span class=\"token keyword\">in</span> mark jane isaac tom\n<span class=\"token keyword\">do</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$name</span> selected\"</span>\n<span class=\"token keyword\">done</span>\n\n<span class=\"token keyword\">select</span> <span class=\"token for-or-select variable\">name</span> <span class=\"token keyword\">in</span> mark jane isaac tom\n<span class=\"token keyword\">do</span>\n    <span class=\"token keyword\">case</span> <span class=\"token variable\">$name</span> <span class=\"token keyword\">in</span>\n    mark <span class=\"token punctuation\">)</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"mark selected\"</span> <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n    jane <span class=\"token punctuation\">)</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"jane selected\"</span> <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n    isaac <span class=\"token punctuation\">)</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"isaac selected\"</span> <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n    tom <span class=\"token punctuation\">)</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"tom selected\"</span> <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n    * <span class=\"token punctuation\">)</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"please select number between 1 and 4\"</span> <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">esac</span>\n<span class=\"token keyword\">done</span></code></pre></div>\n<h3>Break and Continue</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token keyword\">for</span> <span class=\"token variable\"><span class=\"token punctuation\">((</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">))</span></span>\n<span class=\"token keyword\">do</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$i</span> -eq <span class=\"token number\">2</span> -o <span class=\"token variable\">$i</span> -eq <span class=\"token number\">5</span> <span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">then</span>\n        <span class=\"token builtin class-name\">continue</span>\n    <span class=\"token keyword\">fi</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$i</span> -gt <span class=\"token number\">7</span> <span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">then</span>\n        <span class=\"token builtin class-name\">break</span>\n    <span class=\"token keyword\">fi</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$i</span>\"</span>\n<span class=\"token keyword\">done</span></code></pre></div>\n<h3>Functions</h3>\n<p>Sequence matters in execution but not in declaration</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token keyword\">function</span> <span class=\"token function-name function\">Hello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Hello\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function-name function\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$1</span>\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function-name function\">quit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin class-name\">exit</span>\n<span class=\"token punctuation\">}</span>\n\nprint <span class=\"token string\">\"Hi there!\"</span>\nHello\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"foo\"</span>\nquit</code></pre></div>\n<h3>Local variables</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token keyword\">function</span> <span class=\"token function-name function\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin class-name\">local</span> <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token variable\">$1</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"the name is <span class=\"token variable\">$name</span>\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"Jane\"</span>\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"name is <span class=\"token variable\">$name</span>\"</span>\nprint John\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"name is <span class=\"token variable\">$name</span>\"</span>\n\n<span class=\"token comment\"># function example</span>\n<span class=\"token function-name function\">usage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"You need to provide an argument : \"</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"usage : <span class=\"token variable\">$0</span> file_name\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function-name function\">is_file_exist</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin class-name\">local</span> <span class=\"token assign-left variable\">filename</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">$1</span>\"</span>\n    <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> -f <span class=\"token string\">\"<span class=\"token variable\">${filename}</span>\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">return</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> <span class=\"token builtin class-name\">return</span> <span class=\"token number\">1</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> is_file_exist <span class=\"token string\">\"<span class=\"token variable\">$1</span>\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"File exists\"</span>\n<span class=\"token keyword\">else</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"File does not exist\"</span>\n<span class=\"token keyword\">fi</span></code></pre></div>\n<h2>readonly variables</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">var</span><span class=\"token operator\">=</span><span class=\"token number\">31</span> <span class=\"token comment\">#cannot be changed</span>\n\n<span class=\"token builtin class-name\">readonly</span> var</code></pre></div>\n<h3>Signals and traps</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"pid is <span class=\"token variable\">$$</span>\"</span>\n<span class=\"token keyword\">while</span> <span class=\"token variable\"><span class=\"token punctuation\">((</span> COUNT <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span> <span class=\"token punctuation\">))</span></span>\n<span class=\"token keyword\">do</span>\n    <span class=\"token function\">sleep</span> <span class=\"token number\">1</span>\n    <span class=\"token variable\"><span class=\"token punctuation\">((</span> COUNT<span class=\"token operator\">++</span> <span class=\"token punctuation\">))</span></span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">${COUNT}</span>\"</span>\n<span class=\"token keyword\">done</span>\n<span class=\"token builtin class-name\">exit</span> <span class=\"token number\">0</span></code></pre></div>","frontmatter":{"title":"shell scripting","date":"May 12, 2022","description":"scripting"}},"previous":{"fields":{"slug":"/webrtc/"},"frontmatter":{"title":"understanding webRTC"}},"next":null},"pageContext":{"id":"b06cfd96-2ab1-5e59-b8a4-82cf49f30cd2","previousPostId":"06dfa4fa-9763-5c85-9d48-ff2a1c7625ea","nextPostId":null}},"staticQueryHashes":["2841359383","3257411868"]}