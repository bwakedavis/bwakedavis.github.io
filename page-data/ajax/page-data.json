{"componentChunkName":"component---src-templates-blog-post-js","path":"/ajax/","result":{"data":{"site":{"siteMetadata":{"title":"bwake blog"}},"markdownRemark":{"id":"09a00824-0b49-5491-89bc-125532b24eec","excerpt":"Asynchronous JavaScript and XML enables you to: Read data from a web server  after the page has loaded Update a web page without reloading the page Send data to…","html":"<p>Asynchronous JavaScript and XML enables you to:</p>\n<ul>\n<li>Read data from a web server  after the page has loaded</li>\n<li>Update a web page without reloading the page</li>\n<li>Send data to a web server - in the background</li>\n</ul>\n<p>You gonna like it.Lets look how you can update data asynchonously with Ajax</p>\n<p>Create a html file where we will display the data we fetch with AJAX on the browser.</p>\n<p>Create a JavaScript file to put you JS code and link it or you can use script tag on you html\n<strong>index.html</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n\n        <span class=\"token comment\">&lt;!-- display data from a local text file --></span>\n\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Get Text File<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text-file<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n        <span class=\"token comment\">&lt;!-- display data from a local json file --></span>\n\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fetch-user<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Get User<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>User<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>user<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n        <span class=\"token comment\">&lt;!-- display an array of data from a local json file --></span>\n\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fetch-users<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Get Users<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>Users<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>users<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n        <span class=\"token comment\">&lt;!-- display data from an online api(Github Api) --></span>\n\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fetch-github-users<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Get Github Users<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>Github Users<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>display-github-user<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>./ajax.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>First we want to fetch data in a local text file and display it on the browser.\nCreate a text file in your current directory called it ‘file.txt’</p>\n<p>The data is displayed asynchronously without reloading the browser. Isn’t that cool 😊</p>\n<p><strong>index.js</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">    <span class=\"token comment\">//Fetch a local text file on click</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> loadFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">loadFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//Create the XHR Object</span>\n    <span class=\"token keyword\">let</span> xhr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XMLHttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Open the file,</span>\n    xhr<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'./file.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// console.log(xhr.readyState)</span>\n\n    <span class=\"token comment\">// loaders (optional)</span>\n    xhr<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onprogress</span><span class=\"token operator\">=</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>readyState<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    xhr<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>status <span class=\"token operator\">==</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// console.log(this.responseText)</span>\n            document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'text-file'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>responseText\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n            document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'text-file'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">\"Not Found\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    xhr<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onerror</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"an error occured\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">//Using onreadystatechange(You can use this method instead of onload)</span>\n\n        <span class=\"token comment\">// HTTP STATUSES</span>\n        <span class=\"token comment\">//200: \"OK\"</span>\n        <span class=\"token comment\">//403: \"Fobiden\"</span>\n        <span class=\"token comment\">//404: \"Not Found\"</span>\n        <span class=\"token comment\">//READY STATE VALUES</span>\n        <span class=\"token comment\">//0:\"Request not initialized\"</span>\n        <span class=\"token comment\">//1: \"server connection established\"</span>\n        <span class=\"token comment\">//2: \"request received\"</span>\n        <span class=\"token comment\">//3: \"processing request\"</span>\n        <span class=\"token comment\">//4: \"Request finished and response is ready\"</span>\n\n    <span class=\"token comment\">// xhr.onreadystatechange = function(){</span>\n    <span class=\"token comment\">//     console.log(xhr.readyState)</span>\n    <span class=\"token comment\">//     if(this.readyState == 4 &amp;&amp; this.status == 200){</span>\n    <span class=\"token comment\">//         console.log(this.responseText)</span>\n    <span class=\"token comment\">//     }</span>\n    <span class=\"token comment\">// }</span>\n\n    <span class=\"token comment\">//sends request</span>\n    xhr<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Next we’re going to fetch a local json file with a single object\nCreate a file in your directory called “user.json”\nand paste this</p>\n<p><strong>user.json</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">    <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"age\"</span><span class=\"token operator\">:</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Davis\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"email\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"davis@gmail.com\"</span>\n    <span class=\"token punctuation\">}</span></code></pre></div>\n<p>Lets display the object with ajax</p>\n<p><strong>index.js</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  \ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fetch-user'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span>fetchUser<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">fetchUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> xhr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XMLHttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    xhr<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'user.json'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n\n    xhr<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>status <span class=\"token operator\">==</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// console.log(this.responseText)</span>\n            <span class=\"token keyword\">let</span> user <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>responseText<span class=\"token punctuation\">)</span>\n\n            <span class=\"token keyword\">let</span> output <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n            output <span class=\"token operator\">+=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n            &lt;ul>\n            &lt;li></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>user<span class=\"token punctuation\">.</span>age<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;/li>\n            &lt;li></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>user<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;/li>\n            &lt;li></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>user<span class=\"token punctuation\">.</span>email<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;/li>\n            &lt;/ul>\n            </span><span class=\"token template-punctuation string\">`</span></span>\n            document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'user'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> output\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    xhr<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onerror</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"An error occurred\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    xhr<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>We have fetched a single json object successfully,cheers 🥂😇</p>\n<p>Let us now fetch an array of json objects.Create a file called ‘users.json”</p>\n<p><strong>users.json</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">    <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"age\"</span><span class=\"token operator\">:</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Davis\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"email\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"davis@gmail.com\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"age\"</span><span class=\"token operator\">:</span><span class=\"token number\">22</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Dan\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"email\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"dan@gmail.com\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"age\"</span><span class=\"token operator\">:</span><span class=\"token number\">40</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Don\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"email\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"don@gmail.com\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span></code></pre></div>\n<p>Lets output it in the browser</p>\n<p><strong>index.js</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fetch-users'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span>fetchUsers<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">fetchUsers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> xhr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XMLHttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    xhr<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'users.json'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n\n    xhr<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>status <span class=\"token operator\">==</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// console.log(this.responseText)</span>\n            <span class=\"token keyword\">let</span> users <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>responseText<span class=\"token punctuation\">)</span>\n\n            <span class=\"token keyword\">let</span> output <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> user <span class=\"token keyword\">in</span> users<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                output <span class=\"token operator\">+=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;ul>\n                &lt;li></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>users<span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>age<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;/li>\n                &lt;li></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>users<span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;/li>\n                &lt;li></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>users<span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>email<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;/li>\n                &lt;/ul></span><span class=\"token template-punctuation string\">`</span></span>\n            \n            <span class=\"token punctuation\">}</span>\n\n            document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'users'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> output\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    xhr<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onerror</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"An error occurred\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    xhr<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token punctuation\">}</span></code></pre></div>\n<p>We did it,One more thing we want to work with a remote API we will be working with the github API and fetch users</p>\n<p>This is the url <a href=\"https://api.github.com/users\">https://api.github.com/users</a></p>\n<p><strong>index.js</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">    document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fetch-github-users'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> fetchGithubUsers<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">fetchGithubUsers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> xhr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XMLHttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        xhr<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'https://api.github.com/users'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n\n        xhr<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>status <span class=\"token operator\">==</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">let</span> users <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>responseText<span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">let</span> output <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\n                <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> user <span class=\"token keyword\">in</span> users<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                    output <span class=\"token operator\">+=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n                    &lt;div class=\"user\">\n                    &lt;img src= </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>users<span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>avatar_url<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> width=\"100\" height=\"100\"/>\n                    &lt;ul>\n                        &lt;li>ID: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>users<span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> &lt;/li>\n                        &lt;li>User Name: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>users<span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>login<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> &lt;/li>\n                        &lt;li>Url: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>users<span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>url<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> &lt;/li>\n                        &lt;li>Followers Url: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>users<span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>followers_url<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> &lt;/li>\n                    &lt;/ul>\n                    &lt;/div>\n                    </span><span class=\"token template-punctuation string\">`</span></span>\n                <span class=\"token punctuation\">}</span>\n                document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'display-github-user'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> output<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        xhr<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span></code></pre></div>\n<p>Cheers go enjoy AJAX 🥳 🥳</p>","frontmatter":{"title":"Learn Asynchronous JavaScript and XML(AJAX)","date":"November 17, 2019","description":"Asynchronous JavaScript and XMLAJAX enables you to:\nRead data from a web server  after the page has loaded, Update a web page without reloading the page, Send data to a web server - in the background.You gonna like it.Lets look how you can update data asynchonously with Ajax"}},"previous":{"fields":{"slug":"/js-array-methods/"},"frontmatter":{"title":"JavaScript High Order Array Methods"}},"next":{"fields":{"slug":"/blockchain/"},"frontmatter":{"title":"Understand Blockchain Technology"}}},"pageContext":{"id":"09a00824-0b49-5491-89bc-125532b24eec","previousPostId":"7b68197b-174e-5ddd-8f09-e20a5073eb84","nextPostId":"41f7b941-feaa-5f1e-8210-38adf538f752"}},"staticQueryHashes":["2841359383","3257411868"]}